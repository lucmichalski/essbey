# docker resolver ip
resolver 127.0.0.11 ipv6=off;

server {
	listen 80;

	location / {
		include /etc/nginx/conf.d/proxy.conf;
		# Redirect Http to Https
		return 301 https://$host$request_uri;
	}
}

server {
  listen 443 ssl http2;
  server_name plex.shokohsc;

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    include /etc/nginx/conf.d/proxy.conf;
    set $plex "plex";
    proxy_pass http://$plex:32400;
  }

  access_log  /dev/stdout;
  error_log   /dev/stderr;
}

server {
  listen 443 ssl http2;
  server_name gazee.shokohsc;

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    include /etc/nginx/conf.d/proxy.conf;
    set $gazee "gazee";
    proxy_pass http://$gazee:4242;
  }

  access_log  /dev/stdout;
  error_log   /dev/stderr;
}

server {
  listen 443 ssl http2;
  server_name pydio.shokohsc

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    include /etc/nginx/conf.d/proxy.conf;
    set $pydio "pydio";
    proxy_pass https://$pydio:443;
  }

  access_log  /dev/stdout;
  error_log   /dev/stderr;
}

server {
  listen 443 ssl http2;
  server_name h5ai.shokohsc

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    include /etc/nginx/conf.d/proxy.conf;
    set $h5ai "h5ai";
    proxy_pass http://$h5ai;
  }

  access_log  /dev/stdout;
  error_log   /dev/stderr;
}

server {
  listen 443 ssl http2;
  server_name lychee.shokohsc

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    include /etc/nginx/conf.d/proxy.conf;
    set $lychee "lychee";
    proxy_pass http://$lychee;
  }

  access_log  /dev/stdout;
  error_log   /dev/stderr;
}

server {
  listen 443 ssl http2;
  server_name transmission.shokohsc

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    include /etc/nginx/conf.d/proxy.conf;
    set $openvpn "openvpn";
    proxy_pass http://$openvpn:9091;
  }

  access_log  /dev/stdout;
  error_log   /dev/stderr;
}

server {
  listen 443 ssl http2;
  server_name adminer.shokohsc

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    include /etc/nginx/conf.d/proxy.conf;
    set $adminer "adminer";
    proxy_pass http://$adminer:8080;
  }

  access_log  /dev/stdout;
  error_log   /dev/stderr;
}

server {
  listen 443 ssl http2;
  server_name grafana.shokohsc

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    include /etc/nginx/conf.d/proxy.conf;
    set $grafana "grafana";
    proxy_pass http://$grafana:3000;
  }

  access_log  /dev/stdout;
  error_log   /dev/stderr;
}

version: '2'

networks:

    connected:
        driver: bridge
        ipam:
            driver: default
            config: # http://www.subnet-calculator.com/subnet.php?net_class=B
            - subnet: 172.16.0.0/25 # 172.16.0.1 - 172.16.0.126
              gateway: 172.16.0.126
              ip_range: 172.16.0.0/26 # 172.16.0.1 - 172.16.0.62

    hidden:
        internal: true

services:

    duckdns: # Dynamic IP <-> Domain
        container_name: duckdns
        image: linuxserver/duckdns
        restart: ${RESTART_MODE}
        environment:
            SUBDOMAINS: ${DUCKDNS_SUBDOMAINS}
            TOKEN: ${PUID}
            TZ: ${TIMEZONE}
        networks:
            - connected

    openvpn:
        container_name: openvpn
        image: kylemanna/openvpn
        cap_add:
            - net_admin
        restart: ${RESTART_MODE}
        ports:
            - "32767:1194/udp"
            - "32766:51413/tcp"
            - "32766:51413/udp"
        volumes:
            - ./config/openvpn:/etc/openvpn
        networks:
            - connected

    nginx: # Reverse proxy
        container_name: nginx
        image: nginx
        restart: ${RESTART_MODE}
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./config/nginx/certs:/etc/nginx/certs
            - ./config/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
            - ./config/nginx/conf/proxy.conf:/etc/nginx/conf.d/proxy.conf
            - ./config/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
        networks:
            - connected

    transmission: # Torrent client
        container_name: transmission
        image: linuxserver/transmission
        restart: ${RESTART_MODE}
        volumes:
            - ./config/transmission:/config
            - ./download:/downloads
            - ./shared/transmission:/watch
        network_mode: "service:openvpn"
        depends_on:
            - openvpn

    gazee: # Comics connected server
        container_name: gazee
        image: linuxserver/gazee
        restart: ${RESTART_MODE}
        environment:
            PGID: ${PGID}
            PUID: ${PUID}
            TZ: ${TIMEZONE}
        volumes:
            - ./config/gazee:/config
            - ./download:/comics/downloaded
            - ./shared/gazee:/comics/shared
        networks:
            - connected
        depends_on:
            - nginx

    lychee: # Picture tool connected server
        container_name: lychee
        image: linuxserver/lychee
        restart: ${RESTART_MODE}
        environment:
            PGID: ${PGID}
            PUID: ${PUID}
        volumes:
            - ./config/lychee:/config
            - ./shared/lychee:/pictures
        networks:
            - connected
            - hidden
        depends_on:
            - nginx
            - mariadb

    pydio: # Online usb key connected server
        container_name: pydio
        image: linuxserver/pydio
        restart: ${RESTART_MODE}
        environment:
            PGID: ${PGID}
            PUID: ${PUID}
            TZ: ${TIMEZONE}
        volumes:
            - ./config/pydio:/config
            - ./config/nginx/certs/cert.pem:/config/keys/cert.crt:ro
            - ./config/nginx/certs/key.pem:/config/keys/cert.key:ro
            - ./work/pydio:/data
        networks:
            - connected
            - hidden
        depends_on:
            - nginx

    mariadb: # Database, pydio & lychee requirement
        container_name: mariadb
        image: mariadb
        restart: ${RESTART_MODE}
        environment:
            MYSQL_ROOT_PASSWORD: ${GLOBAL_PASSWORD}
        volumes:
            - ./config/mariadb:/var/lib/mysql
        networks:
            - hidden

    h5ai: # File exporer connected server
        container_name: h5ai
        image: clue/h5ai
        restart: ${RESTART_MODE}
        volumes:
            - ./download:/var/www/downloads
            - ./shared:/var/www/shared
        networks:
            - connected
        depends_on:
            - nginx

    samba: # SMB server read only guests
        container_name: samba
        image: dperson/samba
        command: '-s "shared;/mount;yes;yes;yes;all;none"'
        restart: ${RESTART_MODE}
        ports:
            - "139:139"
            - "445:445"
        volumes:
            - ./download:/mount/downloads
            - ./shared:/mount/shared
        networks:
            - connected

    sftp: # Sftp server read/write users
        container_name: sftp
        image: atmoz/sftp
        command: ${SFTP_COMMAND}
        restart: ${RESTART_MODE}
        ports:
            - "32768:22"
        volumes:
            - ./download:/home/shokohsc/upload/downloads
            - ./shared:/home/shokohsc/upload/shared
        networks:
            - connected

    adminer: # Admin mysql database tool web server
        container_name: adminer
        image: adminer
        restart: ${RESTART_MODE}
        networks:
            - connected
            - hidden
        depends_on:
            - nginx
            - mariadb

    plex: # Media server
        container_name: plex
        image: plexinc/pms-docker
        restart: ${RESTART_MODE}
        environment:
            PLEX_CLAIM: ${PLEX_CLAIM}
            ADVERTISE_IP: ${PLEX_ROOT_URL}
            TZ: ${TIMEZONE}
        ports:
            - "32769:32400/tcp"
            - "3005:3005/tcp"
            - "8324:8324/tcp"
            - "32469:32469/tcp"
            - "1900:1900/udp"
            - "32410:32410/udp"
            - "32412:32412/udp"
            - "32413:32413/udp"
            - "32414:32414/udp"
        volumes:
            - ./config/plex:/config
            - ./work/plex:/transcode
            - ./download:/data/downloads
            - ./shared:/data/shared
        networks:
            - connected
        depends_on:
            - nginx
        hostname: "plex"

    grafana: # Monitoring tool connected server
        container_name: grafana
        image: grafana/grafana
        restart: ${RESTART_MODE}
        environment:
            GF_SECURITY_ADMIN_PASSWORD: ${GLOBAL_PASSWORD}
            GF_SERVER_ROOT_URL: ${GRAFANA_ROOT_URL}
        networks:
            - connected
            - hidden
        depends_on:
            - nginx
            - prometheus
            - node-exporter
            - cadvisor

    prometheus: # Database, grafana requirement
        image: prom/prometheus:v1.8.2
        container_name: prometheus
        restart: ${RESTART_MODE}
        volumes:
            - ./config/prometheus:/etc/prometheus
            - ./data/prometheus:/prometheus
        command:
            - '-config.file=/etc/prometheus/prometheus.yml'
            - '-storage.local.path=/prometheus'
        networks:
            - hidden
        hostname: "localhost"

    node-exporter: # grafana requirement
        image: prom/node-exporter:latest
        container_name: node_exporter
        restart: ${RESTART_MODE}
        networks:
            - hidden

    cadvisor: # grafana requirement
        image: google/cadvisor:latest
        container_name: cadvisor
        restart: ${RESTART_MODE}
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
        networks:
            - hidden

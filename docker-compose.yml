version: '2'

networks:

    connected:
        driver: bridge
        ipam:
            driver: default
            config: # http://www.subnet-calculator.com/subnet.php?net_class=B
            - subnet: 172.16.0.0/25 # 172.16.0.1 - 172.16.0.126
              gateway: 172.16.0.126
              ip_range: 172.16.0.0/26 # 172.16.0.1 - 172.16.0.62

    hidden:
        internal: true

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

    samba: # SMB server
        container_name: samba
        image: dperson/samba
        command: '-s "shared;/mount;yes;no;yes;all;none"'
        restart: ${RESTART_MODE}
        ports:
            - "139:139"
            - "445:445"
        volumes:
            - ./download/complete:/mount/downloads
            - ./shared:/mount/shared
            - /media/nuc/WD2To:/mount/media
        networks:
            - connected
        labels:
            - "traefik.enable=false"

    sftp: # Sftp server
        container_name: sftp
        image: atmoz/sftp
        command: ${SFTP_COMMAND}
        restart: ${RESTART_MODE}
        ports:
            - "32768:22"
        volumes:
            - ./download/complete:/home/shokohsc/upload/downloads
            - ./shared:/home/shokohsc/upload/shared
            - /media/nuc/WD2To:/home/shokohsc/upload/media
        networks:
            - connected
        labels:
            - "traefik.enable=false"

    duckdns: # Dynamic IP <-> Domain
        container_name: duckdns
        image: linuxserver/duckdns
        restart: ${RESTART_MODE}
        environment:
            SUBDOMAINS: ${DUCKDNS_SUBDOMAINS}
            TOKEN: ${PUID}
            TZ: ${TIMEZONE}
        networks:
            - connected
        labels:
            - "traefik.enable=false"

    openvpn: # Internal vpn
        container_name: openvpn
        image: kylemanna/openvpn
        cap_add:
            - net_admin
        restart: ${RESTART_MODE}
        ports:
            - "32767:1194/udp"
        volumes:
            - ./config/openvpn:/etc/openvpn
        networks:
            - connected
        labels:
            - "traefik.enable=false"

    gateway: # Torrenting vpn
        container_name: gateway
        image: dperson/openvpn-client
        cap_add:
            - net_admin
        restart: ${RESTART_MODE}
        command: "-r 192.168.1.0/24 -p 9091"
        ports:
            - "32766:51413/tcp"
            - "32766:51413/udp"
        volumes:
            - ./vpn_conf.ovpn:/vpn/vpn_conf.ovpn
        environment:
            TZ: ${TIMEZONE}
        devices:
            - "/dev/net/tun:/dev/net/tun"
        networks:
            - connected
        dns: 8.8.8.8
        labels:
            - "traefik.enable=true"
            - "traefik.frontend.rule=Host:transmission.shokohsc"
            - "traefik.port=9091"

    traefik: # Reverse proxy
        container_name: traefik
        image: traefik
        restart: ${RESTART_MODE}
        command: --api --docker
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./config/traefik/certs:/etc/traefik/certs
            - ./config/traefik/traefik.toml:/etc/traefik/traefik.toml
        networks:
            - connected
        labels:
            - "traefik.enable=true"
            - "traefik.frontend.rule=Host:traefik.shokohsc"
            - "traefik.port=8080"

    portainer: # Docker management
        container_name: portainer
        image: portainer/portainer
        restart: ${RESTART_MODE}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
            - connected
        depends_on:
            - traefik
        labels:
            - "traefik.enable=true"
            - "traefik.frontend.rule=Host:portainer.shokohsc"
            - "traefik.port=9000"

    transmission: # Torrent client
        container_name: transmission
        image: linuxserver/transmission
        restart: ${RESTART_MODE}
        volumes:
            - ./config/transmission:/config
            - ./download:/downloads
            - ./shared/transmission:/watch
        network_mode: "service:gateway"
        depends_on:
            - gateway

    gazee: # Comics connected server
        container_name: gazee
        image: linuxserver/gazee
        restart: ${RESTART_MODE}
        environment:
            PGID: ${PGID}
            PUID: ${PUID}
        volumes:
            - ./config/gazee:/config
            - ./shared/gazee:/comics
        networks:
            - connected
        depends_on:
            - traefik
        labels:
            - "traefik.enable=true"
            - "traefik.frontend.rule=Host:gazee.shokohsc"
            - "traefik.port=4242"

    commander: # Web ui server admin
        container_name: commander
        image: coderaiser/cloudcmd
        restart: ${RESTART_MODE}
        volumes:
            - /:/mnt/fs
            - ./download/complete:/root/downloads
            - ./shared:/root/shared
            - /media/nuc/WD2To:/root/media
        networks:
            - connected
        depends_on:
            - traefik
        labels:
            - "traefik.enable=true"
            - "traefik.frontend.rule=Host:commander.shokohsc"
            - "traefik.port=8000"

    plex: # Media server
        container_name: plex
        image: plexinc/pms-docker
        restart: ${RESTART_MODE}
        environment:
            PLEX_CLAIM: ${PLEX_CLAIM}
            ADVERTISE_IP: ${PLEX_ROOT_URL}
            TZ: ${TIMEZONE}
        ports:
            - "32769:32400/tcp"
            - "3005:3005/tcp"
            - "8324:8324/tcp"
            - "32469:32469/tcp"
            - "1900:1900/udp"
            - "32410:32410/udp"
            - "32412:32412/udp"
            - "32413:32413/udp"
            - "32414:32414/udp"
        volumes:
            - ./config/plex:/config
            - ./work/plex:/transcode
            - /media/nuc/WD2To:/data/media
        networks:
            - connected
        depends_on:
            - traefik
        hostname: "plex"
        labels:
            - "traefik.enable=true"
            - "traefik.frontend.rule=Host:plex.shokohsc"
            - "traefik.port=32400"

    grafana: # Monitoring tool connected server
        container_name: grafana
        image: grafana/grafana:5.2.4
        restart: ${RESTART_MODE}
        environment:
            GF_SECURITY_ADMIN_PASSWORD: ${GLOBAL_PASSWORD}
            GF_SERVER_ROOT_URL: ${GRAFANA_ROOT_URL}
        volumes:
            - grafana_data:/var/lib/grafana
            - ./config/grafana/datasources:/etc/grafana/datasources
            - ./config/grafana/dashboards:/etc/grafana/dashboards
            - ./config/grafana/setup.sh:/setup.sh
        entrypoint: /setup.sh
        networks:
            - connected
            - hidden
        depends_on:
            - traefik
            - prometheus
            - pushgateway
            - nodeexporter
            - cadvisor
        labels:
            - "traefik.enable=true"
            - "traefik.frontend.rule=Host:grafana.shokohsc"
            - "traefik.docker.network=seedbox_connected"
            - "traefik.port=3000"

    prometheus: # Database, grafana requirement
        image: prom/prometheus:v2.4.3
        container_name: prometheus
        restart: ${RESTART_MODE}
        volumes:
            - ./config/prometheus/:/etc/prometheus/
            - prometheus_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention=200h'
            - '--web.enable-lifecycle'
        networks:
            - hidden

    alertmanager: # Grafana requirement
        image: prom/alertmanager:v0.15.2
        container_name: alertmanager
        volumes:
            - ./config/alertmanager/:/etc/alertmanager/
        command:
            - '--config.file=/etc/alertmanager/config.yml'
            - '--storage.path=/alertmanager'
        restart: ${RESTART_MODE}
        networks:
            - hidden

    nodeexporter: # Grafana requirement
        image: prom/node-exporter:v0.16.0
        container_name: nodeexporter
        restart: ${RESTART_MODE}
        user: root
        privileged: true
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
        networks:
            - hidden

    cadvisor: # Grafana requirement
        image: google/cadvisor:v0.31.0
        container_name: cadvisor
        restart: ${RESTART_MODE}
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
            - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
        networks:
            - hidden

    pushgateway: # Grafana requirement
        image: prom/pushgateway
        container_name: pushgateway
        restart: ${RESTART_MODE}
        networks:
            - hidden

    watchtower: # Watch tower keep all service up to date
        image: v2tec/watchtower
        container_name: watchtower
        restart: ${RESTART_MODE}
        command: --interval 3600 --cleanup
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /root/.docker/config.json:/config.json
        networks:
            - hidden

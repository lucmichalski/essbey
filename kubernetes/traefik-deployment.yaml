apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --volumes hostPath
    kompose.version: 1.21.0 (HEAD)
    traefik.enable: "true"
    traefik.frontend.rule: Host:traefik.
    traefik.port: "8080"
  creationTimestamp: null
  labels:
    io.kompose.service: traefik
  name: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: traefik
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --volumes hostPath
        kompose.version: 1.21.0 (HEAD)
        traefik.enable: "true"
        traefik.frontend.rule: Host:traefik.
        traefik.port: "8080"
      creationTimestamp: null
      labels:
        io.kompose.network/src_connected: "true"
        io.kompose.service: traefik
    spec:
      containers:
      - args:
        - --configFile=/etc/traefik/traefik.toml
        - --metrics
        - --metrics.prometheus
        image: traefik:maroilles-alpine
        imagePullPolicy: ""
        name: traefik
        ports:
        - containerPort: 80
        - containerPort: 443
        resources: {}
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: traefik-hostpath0
        - mountPath: /etc/traefik/certs
          name: traefik-hostpath1
        - mountPath: /etc/traefik/traefik.toml
          name: traefik-hostpath2
      hostname: traefik
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - hostPath:
          path: /var/run/docker.sock
        name: traefik-hostpath0
      - hostPath:
          path: /src/config/traefik/certs
        name: traefik-hostpath1
      - hostPath:
          path: /src/config/traefik/traefik.toml
        name: traefik-hostpath2
status: {}

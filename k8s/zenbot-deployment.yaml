apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o k8s
    kompose.version: 1.21.0 (HEAD)
    traefik.docker.network: ""
    traefik.enable: "true"
    traefik.frontend.rule: Host:zenbot.
    traefik.port: "17365"
  creationTimestamp: null
  labels:
    io.kompose.service: zenbot
  name: zenbot
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: zenbot
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o k8s
        kompose.version: 1.21.0 (HEAD)
        traefik.docker.network: ""
        traefik.enable: "true"
        traefik.frontend.rule: Host:zenbot.
        traefik.port: "17365"
      creationTimestamp: null
      labels:
        io.kompose.network/src_connected: "true"
        io.kompose.network/src_hidden: "true"
        io.kompose.service: zenbot
    spec:
      containers:
      - image: deviavir/zenbot
        imagePullPolicy: ""
        name: zenbot
        resources: {}
        volumeMounts:
        - mountPath: /data
          name: src-zenbot-data
        - mountPath: /app/conf.js
          name: zenbot-claim1
      hostname: zenbot
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: src-zenbot-data
        persistentVolumeClaim:
          claimName: src-zenbot-data
      - name: zenbot-claim1
        persistentVolumeClaim:
          claimName: zenbot-claim1
status: {}
